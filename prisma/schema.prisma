// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "relationJoins", "postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
  extensions = [pgcrypto]
}

model User {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String
  email           String        @unique
  emailVerifiedAt DateTime?     @map("email_verified_at")
  image           String?
  role            Role          @default(USER)
  googleId        String?       @unique @map("google_id")
  createdAt       DateTime      @default(now()) @map("created_at")
  deletedAt       DateTime?     @map("deleted_at")
  updatedAt       DateTime?     @map("updated_at")
  Reservation     Reservation[]
  credit          Int           @default(0)
  timezone        String?

  @@map("users")
}

model Reservation {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status        Status   @default(IDLE)
  startDate     DateTime @map("start_date")
  endDate       DateTime @map("end_date")
  meeting_link  String?
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @map("updated_at")
  author        User     @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId      String   @map("author_id") @db.Uuid
  studentReview String?  @map("student_review")
  courseReview  String?  @map("course_review")

  @@map("reservations")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  IDLE
  PENDING
  VALIDATED
  CANCELLED
  TO_VALIDATE
  TO_CANCEL
  DONE
}
